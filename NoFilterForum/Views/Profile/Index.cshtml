@using System.Web
@using Core.Constants
@using Core.Enums
@using NoFilterForum.Core.Models.DataModels
@using Web.Controllers
@using Web.Static_variables
@using Web.ViewModels
@using Web.ViewModels.Post
@using Web.ViewModels.Profile
@using Web.ViewModels.Warning

@model ProfileViewModel
<body class="mainBG">
	<div class="container borderMain p-3 shadow secondaryBG">
		@{
			<div class="row borderBottom">
				<div class="col-10 borderEnd mb-2">
					<h4 class="mainText">Bio:</h4> <h3 class="fw-bold secondaryText">@Html.Raw(Model.Profile.Bio)</h3>
					<partial name="_ChangeBio" model="new ChangeBioViewModel()" />
				</div>
				<div class="col-2 text-center align-self-center">
					<partial name="_RoleColor" model="new RoleViewModel(Model.Profile.Role,Model.Profile.Id,Model.Profile.UserName,false,Model.Profile.ImageUrl)" />

					<partial name="_UpdateImage" model="new UpdateImageViewModel()" />
				</div>
			</div>
			<div class="row">
				<div class="col-10 align-content-center">
					<h3 class="fs-4 mainText">@Model.Profile.Email</h3>
				</div>
				<div class="col-2">
					<h6 class="fst-italic text-center mainText">@Model.Profile.DateCreated.ToShortDateString()</h6>
					<h6 class="text-danger fw-bold fst-italic text-center">@Model.Profile.WarningsCount warning(s)</h6>
				</div>
			</div>
			<div class="row">
				<div class="col-8 text-start">
					<h3 class="fs-4 fw-bold mainText">
						@Model.Profile.UserName
						<button class="btn mainBtn mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#collapseUsername" aria-expanded="false" aria-controls="collapseUsername">
							Change Username
						</button>
					</h3>
				</div>
				<div class="col-4 text-end">
					<partial name="_ChangeUsername" model="new ChangeUsernameViewModel()" />
				</div>
			</div>

			<div class="row">
				<div class="col-8 text-start">
					<h3 class="fs-4 fw-bold mainText">
						@Model.Profile.Email
						<button class="btn mainBtn mb-2" type="button" data-bs-toggle="collapse" data-bs-target="#collapseEmail" aria-expanded="false" aria-controls="collapseEmail">
							Change Email
						</button>
					</h3>
				</div>
				<div class="col-4 text-end">
					<partial name="_ChangeEmail" model="new ChangeEmailViewModel()" />
				</div>
			</div>
			if (Model.IsSameUser)
			{
				if (!string.IsNullOrEmpty(ViewBag.Error))
				{
					<h1 style="color:red">@ViewBag.Error</h1>
				}
			}
			else
			{
				<form asp-action="Create" asp-controller="Chat" method="post">
					@Html.AntiForgeryToken()
					<input hidden name="UserId" value="@Model.Profile.Id" />
					<button type="submit">Start chat</button>
				</form>
				<h3>@Model.Profile.UserName's bio: @Html.Raw(Model.Profile.Bio)</h3>
			}
			if (UserConstants.adminNames.Contains(this.User.Identity.Name))
			{
				<h6 class="mainText">The user has: <span style="color:red">@Model.Profile.WarningsCount</span> warnings</h6>
					<partial name="~/Views/Warnings/_CreateWarning.cshtml" model="new CreateWarningViewModel(){UserId=Model.Profile.Id}"></partial>
			}
		}
		<h5 class="mainText">Posts count: <span class="secondaryText">@Model.Profile.PostsCount</span></h5>
		@{
			<div class="borderMain p-2 m-2">
				@{
					int count = 1;
				}

				@foreach (var key in Model.UserIdDate.Keys)
				{
					var classBodyColor = count % 2 == 0 ? "thirdBG" : string.Empty;
					var textColor = count % 2 == 0 ? "secondaryText" : "mainText";
					if (Model.Posts.TryGetValue(key, out var post))
					{
						<div class="border-bottom @classBodyColor p-1">
							<a asp-action="Index" class="@textColor text-center link-underline-opacity-10-hover" style="text-decoration:none" asp-controller="Reply" asp-route-postId="@post.Id">
								<div class="row">
									<h5 class="text-center fw-bold fs-4">@post.Title</h5>
								</div>
							</a>
							<div class="row">
								<div class="text-center @textColor">
									@post.Created.ToShortDateString()
								</div>
							</div>
						</div>
						Model.Posts.Remove(key);
					} // ADD DATE FOR POSTS WHEN REPLIES SHOWN
					else if (Model.Replies.TryGetValue(key, out var reply))
					{
						<div class="border-bottom @classBodyColor p-1">
							<a asp-action="Index" class="text-center link-underline-opacity-10-hover" style="text-decoration:none" asp-controller="Reply" asp-route-postId="@reply.PostId" asp-route-replyId="@HttpUtility.UrlEncode(reply.Id)">
								<div class="row">
									<div class="col-6 borderEnd align-content-center">
										<h5 class="fst-italic @textColor text-truncate">@reply.Content</h5>
									</div>
									<div class="col-6  align-content-center">
										<h5 class="text-center @textColor fw-bold">@reply.PostTitle</h5>
									</div>
								</div>
							</a>
							<div class="row">
								<div class="col-6 borderEnd text-center @textColor">
									@reply.Created.ToShortDateString()
								</div>
								<div class="col-6 text-center @textColor">
									@reply.DateCreatedPost.ToShortDateString()
								</div>
							</div>
						</div>
						Model.Replies.Remove(key);
					}
					count++;
				}
			</div>
			int previousPage = Model.Page - 1;
			int nextPage = Model.Page + 1;
			string encodedUsername = HttpUtility.UrlEncode(Model.Profile.UserName);
			<partial name="_Paging" model="new PagingViewModel(Model.Page,Model.TotalPages,Model.ProfileController,Model.IndexAction,string.Empty,string.Empty,string.Empty,Model.Profile.Id)" />
		}

		@section Scripts {
			<partial name="_ValidationScriptsPartial" />
		}

	</div>

</body>
@using System.Web
@using Core.Enums
@using NoFilterForum.Core.Models.DataModels
@using NoFilterForum.Global_variables
@using Web.ViewModels.Profile
@using Web.ViewModels.Warning


@model ProfileViewModel
@{
	<img src="@Model.Profile.ImageUrl" width="200" height="200" />
	if (Model.IsSameUser)
	{
		if (!string.IsNullOrEmpty(ViewBag.Error))
		{
			<h1 style="color:red">@ViewBag.Error</h1>
		}
		<h1>Hello!</h1>
		<h6>You have: @Model.Profile.WarningsCount warnings</h6>
		<h2>Your info (This information is only visible by you): </h2>
		<h3>Email: @Model.Profile.Email</h3>
		<h3>Your account was created on @Model.Profile.DateCreated.ToLongDateString()</h3>
		<h3>Your bio: @Html.Raw(Model.Profile.Bio)</h3>
		<partial name="_ChangeBio" model="new ChangeBioViewModel()" />
		<partial name="_ChangeUsername" model="new ChangeUsernameViewModel()"/>
		<partial name="_ChangeEmail" model="new ChangeEmailViewModel()"/>
		<form asp-action="UpdateImage" asp-controller="Profile" method="post" enctype="multipart/form-data">
			@Html.AntiForgeryToken()
			<input type="file" name="image" accept="image/*"/>
			<button type="submit">Change image</button>
		</form>
	}
	else
	{
		<h3>@Model.Profile.UserName's bio: @Html.Raw(Model.Profile.Bio)</h3>
	}
	<h4>Role: @Model.Profile.Role</h4>
	if (Model.Profile.Role == UserRoles.Admin)
	{
		<h3 class="text-danger">@Model.Profile.UserName</h3>
	}
	else if (Model.Profile.Role == UserRoles.VIP)
	{
		<h3 class="text-warning">@Model.Profile.UserName</h3>
	}
	else if (Model.Profile.Role == UserRoles.Regular)
	{
		<h3 class="text-light">@Model.Profile.UserName</h3>
	}
	else if (Model.Profile.Role == UserRoles.Dinosaur)
	{
		<h3 class="text-primary">@Model.Profile.UserName</h3>
	}
	else
	{
		<h3 class="text-dark">@Model.Profile.UserName</h3>
	}
	if (UserConstants.adminNames.Contains(this.User.Identity.Name))
	{
		<h6>The user has: @Model.Profile.WarningsCount warnings</h6>
		<partial name="~/Views/Warnings/_CreateWarning.cshtml" model="new CreateWarningViewModel(){UserId=Model.Profile.Id}"></partial>
	}
}
<h1>@Model.Profile.UserName</h1>
<h5>Posts count: @Model.Profile.PostsCount</h5>
@{
	foreach(var key in Model.UserIdDate.Keys)
	{
		foreach(var post in Model.Posts)
		{
			if (post.Id == key)
			{
				<a asp-action="Index" asp-controller="Reply" asp-route-postId="@post.Id"><h4 style="font-weight:bold">Post: @post.Title</h4></a>
				<br />
				break;
			}
		}
		foreach(var reply in Model.Replies)
		{
			if (reply.Id == key)
			{
				<a asp-action="Index" asp-controller="Reply" asp-route-postId="@reply.PostId" asp-route-replyId="@HttpUtility.UrlEncode(reply.Id)"><h5>Reply: @reply.Content</h5></a>
				<br />
				break;
			}
		}
	}
	int previousPage = Model.Page - 1;
	int nextPage = Model.Page + 1;
	string encodedUsername = HttpUtility.UrlEncode(Model.Profile.UserName);
	if (Model.TotalPages == 1)
	{
		
	}
	else if (Model.Page==1)
	{
		<a asp-action="Profile" asp-route-userName="@encodedUsername" asp-route-page="@nextPage" asp-controller="Home">
			Next page
		</a>
	}
	else if (Model.Page == Model.TotalPages)
	{

		<a asp-action="Profile" asp-route-userName="@encodedUsername" asp-route-page="@previousPage" asp-controller="Home">
			Previous page
		</a>
	}
	else
	{
		<a asp-action="Profile" asp-route-userName="@encodedUsername" asp-route-page="@previousPage" asp-controller="Home">
			Previous page
		</a>

		<a asp-action="Profile" asp-route-userName="@encodedUsername" asp-route-page="@nextPage" asp-controller="Home">
			Next page
		</a>
	}
}

@section Scripts {
	<partial name="_ValidationScriptsPartial" />
}
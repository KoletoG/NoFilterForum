@using System.Web
@using Core.Enums
@using NoFilterForum.Global_variables
@using Web.ViewModels
@using Web.ViewModels.Reply


@model IndexReplyViewModel
<script src="~/js/JSLikesDislikes.js" asp-append-version="true"> </script>
@if (Model.Post.Username != UserConstants.DefaultUser.UserName)
{
	<partial name="_RoleColor" model="new RoleViewModel(Model.Post.Role,Model.Post.Username,true)" />
	<img src="@Model.Post.ImageUrl" width="125" height="125" />
}
else
{
	<h5 style="text-decoration:line-through">@Model.Post.Username</h5>
}
<h1>@Model.Post.Title</h1>
<h5>@Html.Raw(Model.Post.Content)</h5>
@{
	<partial name="_ShowTime" model="new ShowTimeViewModel(Model.Post.DateCreated)" />
}
@{
	if (Model.CurrentUser.LikesPostRepliesIds.Contains(Model.Post.Id))
	{
		<form asp-action="Like" asp-controller="Post" method="post">
			@Html.AntiForgeryToken()
			<input type="hidden" name="Id" value="@Model.Post.Id" />
			<button type="submit" id="postLike" onclick="updatePostLikes()" style="color:red">Like</button>
		</form>
		<h6 id="likesPostCount">@Model.Post.Likes</h6>
		<form asp-action="Dislike" asp-controller="Post" method="post">
			@Html.AntiForgeryToken()
			<input type="hidden" name="Id" value="@Model.Post.Id" />
			<button type="submit" onclick="updatePostDislikes()" id="postDislike">Dislike</button>
		</form>
	}
	else if (Model.CurrentUser.DislikesPostRepliesIds.Contains(Model.Post.Id))
	{
		<form asp-action="Like" asp-controller="Post" method="post">
			@Html.AntiForgeryToken()
			<input type="hidden" name="Id" value="@Model.Post.Id" />
			<button type="submit" id="postLike" onclick="updatePostLikes()">Like</button>
		</form>
		<h6 id="likesPostCount">@Model.Post.Likes</h6>
		<form asp-action="Dislike" asp-controller="Post" method="post">
			@Html.AntiForgeryToken()
			<input type="hidden" name="Id" value="@Model.Post.Id" />
			<button type="submit" onclick="updatePostDislikes()" id="postDislike" style="color:red">Dislike</button>
		</form>
	}
	else
	{

		<form asp-action="Like" asp-controller="Post" method="post">
			@Html.AntiForgeryToken()
			<input type="hidden" name="Id" value="@Model.Post.Id" />
			<button type="submit" id="postLike" onclick="updatePostLikes()">Like</button>
		</form>
		<h6 id="likesPostCount">@Model.Post.Likes</h6>
		<form asp-action="Dislike" asp-controller="Post" method="post">
			@Html.AntiForgeryToken()
			<input type="hidden" name="Id" value="@Model.Post.Id" />
			<button type="submit" onclick="updatePostDislikes()" id="postDislike">Dislike</button>
		</form>
	}
}
@if (Model.Post.Username == this.User.Identity.Name || UserConstants.adminNames.Contains(this.User.Identity.Name))
{
	<form asp-action="Delete" asp-controller="Post" method="post">
		@Html.AntiForgeryToken()
		<input hidden name="PostId" value="@Model.Post.Id" />
		<button type="submit">Delete Post</button>
	</form>
}
else
{
	<form asp-action="Create" asp-controller="Report" method="post">
		@Html.AntiForgeryToken()
		<input name="Content" type="text" placeholder="Reason for report..." />
		<input type="hidden" name="IsPost" value="true" />
		<input name="IdOfPostReply" type="hidden" value="@Model.Post.Id" />
		<input name="UserIdTo" type="hidden" value="@Model.Post.UserId" />
		<button type="submit">Send Report Model</button>
	</form>
}
@{
	<form asp-action="Create" asp-controller="Reply" method="post">
		@Html.AntiForgeryToken()
		<input type="text" name="Content" placeholder="Write a reply..." />
		<input type="hidden" name="PostId" value="@Model.Post.Id" />
		<button type="submit">Create reply</button>
	</form>
	if (ViewBag.ErrorsList != null)
	{
		foreach (var error in ViewBag.ErrorsList)
		{
			<h5 class="text-danger">@error</h5>
		}
	}
	@foreach (var reply in Model.Replies)
	{
		if (reply.Username != UserConstants.DefaultUser.UserName)
		{
			<partial name="_RoleColor" model="new RoleViewModel(reply.Role,reply.Username,true)"/>
			<img src="@reply.ImageUrl" width="125" height="125" />
		}
		else
		{
			<h5 style="text-decoration:line-through">@reply.Username</h5>
		}
		if (reply.Id == Model.ReplyId)
		{
			<h5 id="idrep_@reply.Id" style="background-color:lightgrey;">@Html.Raw(reply.Content)</h5>
		}
		else
		{
			<h5>@Html.Raw(reply.Content)</h5>
		}
		<partial name="_ShowTime" model="new ShowTimeViewModel(reply.DateCreated)" />
		if (Model.CurrentUser.LikesPostRepliesIds.Contains(reply.Id))
		{
			<form asp-action="Like" asp-controller="Reply" method="post">
				@Html.AntiForgeryToken()
				<input type="hidden" name="Id" value="@reply.Id" />
				<button type="submit" id="like_id_@reply.Id" onclick="updateLikes('id_@reply.Id')" style="color:red">Like</button>
			</form>
			<h6 id="likesCount_id_@reply.Id">@reply.Likes</h6>
			<form asp-action="Dislike" asp-controller="Reply" method="post">
				@Html.AntiForgeryToken()
				<input type="hidden" name="Id" value="@reply.Id" />
				<button type="submit" id="dislike_id_@reply.Id" onclick="updateDislikes('id_@reply.Id')">Dislike</button>
			</form>
		}
		else if (Model.CurrentUser.DislikesPostRepliesIds.Contains(reply.Id))
		{
			<form asp-action="Like" asp-controller="Reply" method="post">
				@Html.AntiForgeryToken()
				<input type="hidden" name="Id" value="@reply.Id" />
				<button type="submit" id="like_id_@reply.Id" onclick="updateLikes('id_@reply.Id')" >Like</button>
			</form>
			<h6 id="likesCount_id_@reply.Id">@reply.Likes</h6>
			<form asp-action="Dislike" asp-controller="Reply" method="post">
				@Html.AntiForgeryToken()
				<input type="hidden" name="Id" value="@reply.Id" />
				<button type="submit" id="dislike_id_@reply.Id" onclick="updateDislikes('id_@reply.Id')" style="color:red">Dislike</button>
			</form>
		}
		else
		{
			<form asp-action="Like" asp-controller="Reply" method="post">
				@Html.AntiForgeryToken()
				<input type="hidden" name="Id" value="@reply.Id" />
				<button type="submit" id="like_id_@reply.Id" onclick="updateLikes('id_@reply.Id')">Like</button>
			</form>
			<h6 id="likesCount_id_@reply.Id">@reply.Likes</h6>
			<form asp-action="Dislike" asp-controller="Reply" method="post">
				@Html.AntiForgeryToken()
				<input type="hidden" name="Id" value="@reply.Id" />
				<button type="submit" id="dislike_id_@reply.Id" onclick="updateDislikes('id_@reply.Id')">Dislike</button>
			</form>
		}
		@if (reply.Username == this.User.Identity.Name || UserConstants.adminNames.Contains(this.User.Identity.Name))
		{
			<form asp-action="Delete" asp-controller="Reply" method="post">
				<input hidden name="ReplyId" value="@reply.Id"/>
				<input hidden name="PostId" value="@Model.Post.Id"/>
				@Html.AntiForgeryToken()
				<button type="submit">Delete Reply</button>
			</form>
		}
		else
		{
			<form asp-action="Create" asp-controller="Report" method="post">
				@Html.AntiForgeryToken()
				<input name="Content" type="text" placeholder="Reason for report..." />
				<input type="hidden" name="IsPost" value="false" />
				<input name="IdOfPostReply" type="hidden" value="@reply.Id" />
				<input name="UserIdTo" type="hidden" value="@reply.Username" />
				<button type="submit">Send Report Model</button>
			</form>
		}
		<form asp-action="Create" asp-controller="Reply" method="post">
			@Html.AntiForgeryToken()
			<input type="text" name="Content" value="@($"@{reply.Username}")" placeholder="Write a reply..." />
			<input type="hidden" name="PostId" value="@Model.Post.Id" />
			<button type="submit">Create reply</button>
		</form>
	}
	<br />
	<form asp-action="Create" asp-controller="Reply" method="post">
		@Html.AntiForgeryToken()
		<input type="text" name="Content" placeholder="Write a reply..." />
		<input type="hidden" name="PostId" value="@Model.Post.Id" />
		<button type="submit">Create reply</button>
	</form>
	int previousPage = Model.Page - 1;
	int nextPage = Model.Page + 1;
	if (Model.TotalPages == 1)
	{

	}
	else if (Model.Page == 1)
	{
		<a asp-action="Index" asp-route-id="@Model.Post.Id" asp-controller="Reply" asp-route-page="@nextPage">Next page</a>
	}
	else if (Model.Page == Model.TotalPages)
	{
		<a asp-action="Index" asp-route-id="@Model.Post.Id" asp-controller="Reply" asp-route-page="@previousPage">Previous page</a>
	}
	else
	{
		<a asp-action="Index" asp-route-id="@Model.Post.Id" asp-controller="Reply" asp-route-page="@previousPage">Previous page</a>
		<a asp-action="Index" asp-route-id="@Model.Post.Id" asp-controller="Reply" asp-route-page="@nextPage">Next page</a>
	}

}
<script>
	document.addEventListener("DOMContentLoaded", function() {
			var targetLabel = document.getElementById("idrep_@Model.ReplyId");
			if (targetLabel)
			{
				targetLabel.scrollIntoView({ behavior: "smooth", block: "start" });
			}
	});
</script>
@using Web.ViewModels.Chat
@model DetailsChatViewModel

<body class="mainBG">
	<div class="container transparentBG borderMain shadow p-4 rounded-1" id="mainContainer">
		@{
			var messagesCount = Model.Messages.Count;
		}

		@for (int i = 0; i < messagesCount; i++)
		{
			if (Model.Messages[i].UserId == Model.UserId)
			{
				<div class="row mb-3" id="row_{@i}" onmouseover="showButtonDelete(`@Model.Messages[i].Id`)" onmouseout="hideButtonDelete(`@Model.Messages[i].Id`)">
					<div id="colOfLastMessage_@Model.Messages[i].Id" class="col-5 align-items-center fst-italic text-end d-flex secondaryText justify-content-end gap-2">
						@Model.CalculateTime(Model.Messages[i].DateTime)
						<form onsubmit="deleteMessage('@Model.User2Id','@Model.Messages[i].Id',this); return false;" id="formDelete">
							<input type="hidden" value="@Model.Messages[i].Id" name="MessageId" />
							<input type="hidden" value="@Model.ChatId" name="ChatId" />
							<button type="submit" hidden id="btn_@Model.Messages[i].Id" class="delBtn"></button>
						</form>
					</div>
					<div class="col-7  d-flex align-items-center borderMain secondaryBG text-break rounded-2" id="message_{@Model.Messages[i].Id}">
						<h6 class="chatText2 mb-0" id="message_@Model.Messages[i].Id">@Model.Messages[i].Message</h6>
					</div>
				</div>
			}
			else
			{
				<div class="row mb-3" id="row_{@i}">
					<div class="col-7 thirdBG  text-break rounded-2  d-flex align-items-center">
						<h6 class="chatText1 mb-0" id="message_@Model.Messages[i].Id">@Model.Messages[i].Message</h6>
					</div>
					<div class="col-5 d-flex align-items-center fst-italic secondaryText text-start d-flex align-items-center" id="colOfLastMessage_@Model.Messages[i].Id">
						@Model.CalculateTime(Model.Messages[i].DateTime)
					</div>
				</div>
			}
		}
	</div>
	<div class="container mt-2 fixed-bottom">
		<form id="messageForm" onsubmit="submitMessage('@Model.User2Id')">
			@Html.AntiForgeryToken()
			<div class="row">

				<div class="col-sm-10 col-lg-11">
					<input type="text"  required class="input-group-text mainInput text-start container" placeholder="Type a message for @Model.Username2" id="messageInput" name="Message" />
				</div>
				<div class="col-sm-2 col-lg-1 align-items-center align-content-center">
					<button type="submit" class="rounded-1 mt-0 mb-0 borderMain" style="background:none"><img src="~/images/sendMessageIcon.png" id="sendMessageIcon" height="35px" /></button>
				</div>
			</div>
			<input type="hidden" name="ChatId" value="@Model.ChatId" />
		</form>
	</div>
</body>

@section Scripts {
	<script src="~/js/signalr.min.js" asp-append-version="true"></script>
	<partial name="_ValidationScriptsPartial" />
	<link rel="stylesheet" href="~/css/btnsCSS.css" asp-append-version="true" />
	<script src="~/js/JSMessage.js" asp-append-version="true"></script>
	<script>
			 setLatestAddedMessageId(`@Model.TakeLastMessageIdOfCurrentUser()`);
			 setChatId(`@Model.ChatId`);
			 setUserRecipientId(`@Model.User2Id`);
				 setUserSendId(`@Model.UserId`);
			 setLastOtherUserMessage(`@Model.TakeLastMessageIdOfOtherUser()`);
				 startAll();
		</script>
	<script>
		document.getElementById('row_{@(Model.Messages.Count - 1)}').scrollIntoView({behavior:"instant"});
	</script>
}
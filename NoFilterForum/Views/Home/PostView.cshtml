@using System.Web
@using Core.Enums
@using NoFilterForum.Core.Models.DataModels
@using NoFilterForum.Core.Models.ViewModels
@using NoFilterForum.Global_variables


@model PostViewModel
<script src="~/js/JSLikesDislikes.js" asp-append-version="true"> </script>
@if (Model.Post.User.UserName != UserConstants.DefaultUser.UserName)
{
	var encodedPostUser = HttpUtility.UrlEncode(Model.Post.User.UserName);
	if (Model.Post.User.Role == UserRoles.Admin)
	{
		<a asp-action="Profile" asp-route-userName="@encodedPostUser" class="text-danger">@Model.Post.User.UserName</a>
	}
	else if (Model.Post.User.Role == UserRoles.VIP)
	{
		<a asp-action="Profile" asp-route-userName="@encodedPostUser" class="text-warning">@Model.Post.User.UserName</a>
	}
	else if (Model.Post.User.Role == UserRoles.Regular)
	{
		<a asp-action="Profile" asp-route-userName="@encodedPostUser" class="text-light">@Model.Post.User.UserName</a>
	}
	else if (Model.Post.User.Role == UserRoles.Dinosaur)
	{
		<a asp-action="Profile" asp-route-userName="@encodedPostUser" class="text-primary">@Model.Post.User.UserName</a>
	}
	else
	{
		<a asp-action="Profile" asp-route-userName="@encodedPostUser" class="text-dark">@Model.Post.User.UserName</a>
	}
	<img src="@Model.Post.User.ImageUrl" width="125" height="125" />
}
else
{
	<h5 style="text-decoration:line-through">@Model.Post.User.UserName</h5>
}
<h1>@Model.Post.Title</h1>
<h5>@Html.Raw(Model.Post.Content)</h5>
@{
	var timeDiff = DateTime.UtcNow - Model.Post.DateCreated;
	void ShowTime(TimeSpan timediff)
	{
		if ((timediff.TotalDays / 31) < 12)
		{
			if (timediff.TotalDays <= 31)
			{
				if (timediff.TotalDays < 1)
				{
					if (timediff.TotalHours < 1)
					{
						if (timediff.TotalMinutes < 1)
						{
							<h6>@timediff.TotalSeconds.ToString("0") seconds ago</h6>
						}
						else
						{
							<h6>@timediff.TotalMinutes.ToString("0") minutes ago</h6>
						}
					}
					else
					{
						<h6>@timediff.TotalHours.ToString("0") hours ago</h6>
					}
				}
				else
				{
					<h6>@timediff.TotalDays.ToString("0") days ago</h6>
				}
			}
			else
			{
				<h6>@((timediff.TotalDays / 31).ToString("0")) months ago</h6>
			}
		}
		else
		{
			<h6>@((timediff.TotalDays / 31 / 12).ToString("0")) years ago</h6>
		}
	}
	ShowTime(timeDiff);
}
@{
	if (Model.CurrentUser.LikesPostRepliesIds.Contains(Model.Post.Id))
	{
		<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@Model.Post.Id" asp-route-isPost="true">
			@Html.AntiForgeryToken()
			<input type="hidden" name="like" value="true" />
			<button type="submit" id="postLike" onclick="updatePostLikes()" style="color:red">Like</button>
		</form>
		<h6 id="likesPostCount">@Model.Post.Likes</h6>
		<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@Model.Post.Id" asp-route-isPost="true">
			@Html.AntiForgeryToken()
			<input type="hidden" name="like" value="false" />
			<button type="submit" onclick="updatePostDislikes()" id="postDislike">Dislike</button>
		</form>
	}
	else if (Model.CurrentUser.DislikesPostRepliesIds.Contains(Model.Post.Id))
	{
		<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@Model.Post.Id" asp-route-isPost="true">
			@Html.AntiForgeryToken()
			<input type="hidden" name="like" value="true" />
			<button type="submit" onclick="updatePostLikes()" id="postLike">Like</button>
		</form>
		<h6 id="likesPostCount">@Model.Post.Likes</h6>
		<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@Model.Post.Id" asp-route-isPost="true">
			@Html.AntiForgeryToken()
			<input type="hidden" name="like" value="false" />
			<button type="submit" id="postDislike" onclick="updatePostDislikes()" style="color:red">Dislike</button>
		</form>
	}
	else
	{
		<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@Model.Post.Id" asp-route-isPost="true">
			@Html.AntiForgeryToken()
			<input type="hidden" name="like" value="true" />
			<button type="submit" onclick="updatePostLikes()" id="postLike">Like</button>
		</form>
		<h6 id="likesPostCount">@Model.Post.Likes</h6>
		<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@Model.Post.Id" asp-route-isPost="true">
			@Html.AntiForgeryToken()
			<input type="hidden" name="like" value="false" />
			<button type="submit" onclick="updatePostDislikes()" id="postDislike">Dislike</button>
		</form>
	}
}
@if (Model.Post.User.UserName == this.User.Identity.Name || UserConstants.adminNames.Contains(this.User.Identity.Name))
{
	<form asp-action="Delete" asp-controller="Post" method="post">
		@Html.AntiForgeryToken()
		<input hidden name="PostId" value="@Model.Post.Id" />
		<input hidden name="SectionTitle" value="@Model.Title" />
		<button type="submit">Delete Post</button>
	</form>
}
else
{
	<form asp-action="Create" asp-controller="Report" method="post">
		@Html.AntiForgeryToken()
		<input name="Content" type="text" placeholder="Reason for report..." />
		<input type="hidden" name="IsPost" value="true" />
		<input name="IdOfPostReply" type="hidden" value="@Model.Post.Id" />
		<input name="UserIdTo" type="hidden" value="@Model.Post.User.Id" />
		<input name="Title" type="hidden" value="@Model.Title" />
		<button type="submit">Send Report Model</button>
	</form>
}
@{
	<form asp-action="Create" asp-controller="Reply" method="post">
		@Html.AntiForgeryToken()
		<input type="text" name="Content" placeholder="Write a reply..." />
		<input type="hidden" name="Title" value="@Model.Title" />
		<input type="hidden" name="PostId" value="@Model.Post.Id" />
		<button type="submit">Create reply</button>
	</form>
	if (ViewBag.ErrorsList != null)
	{
		foreach (var error in ViewBag.ErrorsList)
		{
			<h5 class="text-danger">@error</h5>
		}
	}
	@foreach (var reply in Model.Replies)
	{
		if (reply.User.UserName != UserConstants.DefaultUser.UserName)
		{
			var encodedUsername = HttpUtility.UrlEncode(reply.User.UserName);
			if (reply.User.Role == UserRoles.Admin)
			{
				<a asp-action="Profile" asp-route-userName="@encodedUsername" class="text-danger">@reply.User.UserName</a>
			}
			else if (reply.User.Role == UserRoles.VIP)
			{
				<a asp-action="Profile" asp-route-userName="@encodedUsername" class="text-warning">@reply.User.UserName</a>
			}
			else if (Model.Post.User.Role == UserRoles.Regular)
			{
				<a asp-action="Profile" asp-route-userName="@encodedUsername" class="text-light">@reply.User.UserName</a>
			}
			else if (Model.Post.User.Role == UserRoles.Dinosaur)
			{
				<a asp-action="Profile" asp-route-userName="@encodedUsername" class="text-primary">@reply.User.UserName</a>
			}
			else
			{
				<a asp-action="Profile" asp-route-userName="@encodedUsername" class="text-dark">@reply.User.UserName</a>
			}
			<img src="@reply.User.ImageUrl" width="125" height="125" />
		}
		else
		{
			<h5 style="text-decoration:line-through">@reply.User.UserName</h5>
		}
		if (reply.Id == Model.ReplyId)
		{
			<h5 id="idrep_@reply.Id" style="background-color:lightgrey;">@Html.Raw(reply.Content)</h5>
		}
		else
		{
			<h5>@Html.Raw(reply.Content)</h5>
		}
		var timeDiffReply = DateTime.UtcNow - reply.DateCreated;
		ShowTime(timeDiffReply);
		if (Model.CurrentUser.LikesPostRepliesIds.Contains(reply.Id))
		{
			<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@reply.Id" asp-route-isPost="false">
				@Html.AntiForgeryToken()
				<input type="hidden" name="like" value="true" />
				<button type="submit" id="like_id_@reply.Id" onclick="updateLikes('id_@reply.Id')" style="color:red">Like</button>
			</form>
			<h6 id="likesCount_id_@reply.Id">@reply.Likes</h6>
			<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@reply.Id" asp-route-isPost="false">
				@Html.AntiForgeryToken()
				<input type="hidden" name="like" value="false" />
				<button type="submit" id="dislike_id_@reply.Id" onclick="updateDislikes('id_@reply.Id')">Dislike</button>
			</form>
		}
		else if (Model.CurrentUser.DislikesPostRepliesIds.Contains(reply.Id))
		{
			<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@reply.Id" asp-route-isPost="false">
				@Html.AntiForgeryToken()
				<input type="hidden" name="like" value="true" />
				<button type="submit" id="like_id_@reply.Id" onclick="updateLikes('id_@reply.Id')">Like</button>
			</form>
			<h6 id="likesCount_id_@reply.Id">@reply.Likes</h6>
			<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@reply.Id" asp-route-isPost="false">
				@Html.AntiForgeryToken()
				<input type="hidden" name="like" value="false" />
				<button type="submit" id="dislike_id_@reply.Id" onclick="updateDislikes('id_@reply.Id')" style="color:red">Dislike</button>
			</form>
		}
		else
		{
			<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@reply.Id" asp-route-isPost="false">
				@Html.AntiForgeryToken()
				<input type="hidden" name="like" value="true" />
				<button type="submit" id="like_id_@reply.Id" onclick="updateLikes('id_@reply.Id')">Like</button>
			</form>
			<h6 id="likesCount_id_@reply.Id">@reply.Likes</h6>
			<form asp-action="LikeDislike" asp-controller="Home" method="post" asp-route-id="@reply.Id" asp-route-isPost="false">
				@Html.AntiForgeryToken()
				<input type="hidden" name="like" value="false" />
				<button type="submit" id="dislike_id_@reply.Id" onclick="updateDislikes('id_@reply.Id')">Dislike</button>
			</form>
		}
		@if (reply.User.UserName == this.User.Identity.Name || UserConstants.adminNames.Contains(this.User.Identity.Name))
		{
			<form asp-action="Delete" asp-controller="Reply" method="post">
				<input hidden name="ReplyId" value="@reply.Id"/>
				<input hidden name="PostId" value="@Model.Post.Id"/>
				<input hidden name="TitleOfSection" value="@Model.Title"/>
				@Html.AntiForgeryToken()
				<button type="submit">Delete Reply</button>
			</form>
		}
		else
		{
			<form asp-action="Create" asp-controller="Report" method="post">
				@Html.AntiForgeryToken()
				<input name="Content" type="text" placeholder="Reason for report..." />
				<input type="hidden" name="IsPost" value="false" />
				<input name="IdOfPostReply" type="hidden" value="@reply.Id" />
				<input name="UserIdTo" type="hidden" value="@reply.User.Id" />
				<input name="Title" type="hidden" value="@Model.Title" />
				<button type="submit">Send Report Model</button>
			</form>
		}
		<form asp-action="Create" asp-controller="Reply" method="post">
			@Html.AntiForgeryToken()
			<input type="text" name="Content" value="@($"@{reply.User.UserName}")" placeholder="Write a reply..." />
			<input type="hidden" name="Title" value="@Model.Title" />
			<input type="hidden" name="PostId" value="@Model.Post.Id" />
			<button type="submit">Create reply</button>
		</form>
	}
	<br />
	<form asp-action="Create" asp-controller="Reply" method="post">
		@Html.AntiForgeryToken()
		<input type="text" name="Content" placeholder="Write a reply..." />
		<input type="hidden" name="Title" value="@Model.Title" />
		<input type="hidden" name="PostId" value="@Model.Post.Id" />
		<button type="submit">Create reply</button>
	</form>
	int previousPage = Model.Page - 1;
	int nextPage = Model.Page + 1;
	if (Model.TotalPages == 1)
	{

	}
	else if (Model.Page == 1)
	{
		<a asp-action="PostView" asp-route-id="@Model.Post.Id" asp-route-titleOfSection="@Model.Title" asp-controller="Home" asp-route-page="@nextPage">Next page</a>
	}
	else if (Model.Page == Model.TotalPages)
	{
		<a asp-action="PostView" asp-route-id="@Model.Post.Id" asp-route-titleOfSection="@Model.Title" asp-controller="Home" asp-route-page="@previousPage">Previous page</a>
	}
	else
	{
		<a asp-action="PostView" asp-route-id="@Model.Post.Id" asp-route-titleOfSection="@Model.Title" asp-controller="Home" asp-route-page="@previousPage">Previous page</a>
		<a asp-action="PostView" asp-route-id="@Model.Post.Id" asp-route-titleOfSection="@Model.Title" asp-controller="Home" asp-route-page="@nextPage">Next page</a>
	}

}
<script>
	document.addEventListener("DOMContentLoaded", function() {
			var targetLabel = document.getElementById("idrep_@Model.ReplyId");
			if (targetLabel)
			{
				targetLabel.scrollIntoView({ behavior: "smooth", block: "start" });
			}
	});
</script>